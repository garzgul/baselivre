/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package baselivre.ui.commande;

import baselivre.gestion.Taxe;
import baselivre.gestion.FraisDePort;
import baselivre.produit.Editeur;
import baselivre.ui.frame.InterfaceRoot;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_NO_OPTION;
import static javax.swing.JOptionPane.YES_OPTION;

/**
 *
 * @author CDI117
 */
public class ParametresCommande extends javax.swing.JInternalFrame {

    private String sqlConnection;
    private InterfaceRoot ir;
    private Connection connection;
    
    public ParametresCommande(InterfaceRoot ir) {
        initComponents();
        this.ir = ir;
        this.sqlConnection = ir.SqlConnexion();
        
        try { //Connexion BDD
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
        } catch (ClassNotFoundException ex) {   
            JOptionPane.showMessageDialog(this, "Driver non trouvé ! "+ex.getMessage());
        }
        try {
            connection = DriverManager.getConnection(this.sqlConnection);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this,"erreur base de données "+ ex.getErrorCode());
        }
        
        // remplissage du contenu des comboBox depuis les infos de la BDD
        jcbListeTaux.setModel(initTVA());
        jcbPort.setModel(initPorts());
        
    }
    
    
    private Vector vTVA() {
        Vector v = new Vector();
        String query = "SELECT id_tva, tva_taux FROM tva ORDER BY tva_taux";
        try {
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                Taxe t=new Taxe(rs.getInt("id_tva"), rs.getInt("tva_taux"));
                v.add(t);
            }
            rs.close();
            stmt.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "SQL ! "+ex.getMessage());
            return null;
        }
        return v;
    }    

    private ComboBoxModel initTVA() {
        return new DefaultComboBoxModel(vTVA());
    }
   
    private Vector vPorts() {
        Vector v = new Vector();
        String query = "SELECT id_fraisdeport, fraisdeport_cout FROM fraisdeport ORDER BY fraisdeport_cout";
        try {
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery(query);
            while (rs.next()) {
                FraisDePort f=new FraisDePort(rs.getInt("id_fraisdeport"), rs.getFloat("fraisdeport_cout"));
                v.add(f);
            }
            rs.close();
            stmt.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "SQL ! "+ex.getMessage());
            return null;
        }
        return v;
    }    

    private ComboBoxModel initPorts() {
        return new DefaultComboBoxModel(vPorts());
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        jpTVA = new javax.swing.JPanel();
        jlblValeurTaux = new javax.swing.JLabel();
        jtfValeurTaux = new javax.swing.JTextField();
        jbCreerTVA = new javax.swing.JButton();
        jcbListeTaux = new javax.swing.JComboBox();
        jlblListeTaux = new javax.swing.JLabel();
        jpFraisDePorts = new javax.swing.JPanel();
        jcbPort = new javax.swing.JComboBox();
        jbCreerPort = new javax.swing.JButton();
        jbModifierPort = new javax.swing.JButton();
        jtfPort = new javax.swing.JTextField();
        jlblListeMontantsPorts = new javax.swing.JLabel();

        setClosable(true);

        jlblValeurTaux.setText("Valeur taux (%) :");

        jbCreerTVA.setText("Créer nouveau taux");
        jbCreerTVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCreerTVAActionPerformed(evt);
            }
        });

        jcbListeTaux.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jlblListeTaux.setText("Liste des taux disponibles :");

        javax.swing.GroupLayout jpTVALayout = new javax.swing.GroupLayout(jpTVA);
        jpTVA.setLayout(jpTVALayout);
        jpTVALayout.setHorizontalGroup(
            jpTVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTVALayout.createSequentialGroup()
                .addContainerGap(232, Short.MAX_VALUE)
                .addGroup(jpTVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jbCreerTVA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpTVALayout.createSequentialGroup()
                        .addGroup(jpTVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblListeTaux, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlblValeurTaux, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpTVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbListeTaux, 0, 93, Short.MAX_VALUE)
                            .addComponent(jtfValeurTaux))))
                .addGap(189, 189, 189))
        );
        jpTVALayout.setVerticalGroup(
            jpTVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTVALayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jpTVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbListeTaux, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblListeTaux, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jpTVALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblValeurTaux, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfValeurTaux, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                .addComponent(jbCreerTVA, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82))
        );

        jTabbedPane.addTab("TVA", jpTVA);

        jcbPort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbCreerPort.setText("Créer");
        jbCreerPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCreerPortActionPerformed(evt);
            }
        });

        jbModifierPort.setText("Modifier");
        jbModifierPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModifierPortActionPerformed(evt);
            }
        });

        jlblListeMontantsPorts.setText("Liste des montants disponibles de ports :");

        javax.swing.GroupLayout jpFraisDePortsLayout = new javax.swing.GroupLayout(jpFraisDePorts);
        jpFraisDePorts.setLayout(jpFraisDePortsLayout);
        jpFraisDePortsLayout.setHorizontalGroup(
            jpFraisDePortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFraisDePortsLayout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addGroup(jpFraisDePortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblListeMontantsPorts, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpFraisDePortsLayout.createSequentialGroup()
                        .addGroup(jpFraisDePortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbCreerPort, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcbPort, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66)
                        .addGroup(jpFraisDePortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfPort, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbModifierPort, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(166, Short.MAX_VALUE))
        );
        jpFraisDePortsLayout.setVerticalGroup(
            jpFraisDePortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFraisDePortsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jlblListeMontantsPorts, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpFraisDePortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbPort, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPort, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 153, Short.MAX_VALUE)
                .addGroup(jpFraisDePortsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbModifierPort, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCreerPort, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87))
        );

        jTabbedPane.addTab("Frais de ports", jpFraisDePorts);

        getContentPane().add(jTabbedPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCreerPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCreerPortActionPerformed
        
        if (JOptionPane.showConfirmDialog(this, "Etes-vous sûr de vouloir créer ce nouveaux montant de port ?", "Confirmation", YES_NO_OPTION)==YES_OPTION){
                
            try{
                Statement stmt=connection.createStatement();
                String sql="INSERT INTO dbo.fraisdeport (fraisdeport_cout) VALUES (" + jtfPort.getText() + ") ";
                int result=stmt.executeUpdate(sql);
                stmt.close();
            } catch (SQLException ex){
                JOptionPane.showMessageDialog(null, "Erreur de création port ! " + ex.getMessage());
            }
            
            try{
                connection.close();
            } catch ( SQLException ex) {
                JOptionPane.showMessageDialog(this,"erreur base de données "+ ex.getErrorCode());
            }
            this.dispose();
        }

    }//GEN-LAST:event_jbCreerPortActionPerformed

    private void jbCreerTVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCreerTVAActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Etes-vous sûr de vouloir créer ce nouveaux taux de TVA ?", "Confirmation", YES_NO_OPTION)==YES_OPTION){
                
            try{
                Statement stmt=connection.createStatement();
                String sql="INSERT INTO dbo.tva (tva_taux) VALUES (" + jtfValeurTaux.getText() + ") ";
                int result=stmt.executeUpdate(sql);
                stmt.close();
            } catch (SQLException ex){
                JOptionPane.showMessageDialog(null, "Erreur de création TVA ! " + ex.getMessage());
            }
            
            try{
                connection.close();
            } catch ( SQLException ex) {
                JOptionPane.showMessageDialog(this,"erreur base de données "+ ex.getErrorCode());
            }
            this.dispose();
        }
    }//GEN-LAST:event_jbCreerTVAActionPerformed

    private void jbModifierPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModifierPortActionPerformed
        if (jcbPort.getSelectedItem() != null){
            
            if (JOptionPane.showConfirmDialog(this, "Etes-vous sûr de vouloir modifier le montant du port sélectionné par votre valeur saisie ?", "Confirmation", YES_NO_OPTION)==YES_OPTION){
                
                Integer idFraisDePort=((FraisDePort)jcbPort.getSelectedItem()).getIdfraisdeport();
                
                try{
                    Statement stmt=connection.createStatement();
                    String sql="UPDATE dbo.fraisdeport SET fraisdeport_cout=" + jtfPort.getText()
                                   + " WHERE id_fraisdeport=" + idFraisDePort.toString();
                    int result=stmt.executeUpdate(sql);
                    stmt.close();
                } catch (SQLException ex){
                    JOptionPane.showMessageDialog(null, "Erreur de modification port ! " + ex.getMessage());
                }

                try{
                    connection.close();
                } catch ( SQLException ex) {
                    JOptionPane.showMessageDialog(this,"erreur base de données "+ ex.getErrorCode());
                }
                this.dispose();
            }

        }

    }//GEN-LAST:event_jbModifierPortActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JButton jbCreerPort;
    private javax.swing.JButton jbCreerTVA;
    private javax.swing.JButton jbModifierPort;
    private javax.swing.JComboBox jcbListeTaux;
    private javax.swing.JComboBox jcbPort;
    private javax.swing.JLabel jlblListeMontantsPorts;
    private javax.swing.JLabel jlblListeTaux;
    private javax.swing.JLabel jlblValeurTaux;
    private javax.swing.JPanel jpFraisDePorts;
    private javax.swing.JPanel jpTVA;
    private javax.swing.JTextField jtfPort;
    private javax.swing.JTextField jtfValeurTaux;
    // End of variables declaration//GEN-END:variables
}
